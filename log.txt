R = Reason
S = Solution
V = Versioning
P = Problem


================================================================================================================================================
SOLVED
================================================================================================================================================
	R		: 01	- Setup a project using Spring-boot and Spring-MVC
	R		: 02	- Make class-diagram

================================================================================================================================================
WISHLIST
================================================================================================================================================
	R		: 99	- ???

================================================================================================================================================
TODO
================================================================================================================================================
	R		: 03	- Add / update classes for domain and web
	R		: 04	- Create diagram for SQL-datamodel
	R		: 05	- Create SQL-datamodel
	R		: 06	- Create persistence unit
	R		: 07	- Create basic web-interface
	R		: 08	- Create login-page
	R		: 09	- Efficient Spring-configuration
	R		: 10	- Security
	R		: 11	- Data-connectivity



================================================================================================================================================
TASKS PERFORMED
================================================================================================================================================

------------------------------------------------------------------------------------------------------------------------------------------------
01.	R		: Setup a project using Spring-boot and Spring-MVC

	S		: Created basic files and code for Hello World : see "install.zip"


------------------------------------------------------------------------------------------------------------------------------------------------
02.	R		: Make class-diagram

				Argo program shortcut contains hard-coded reference to JAVA 6 and requires JAVA 6 to be installed.
				After installation of Argo, change program shortcut to refer to JAVA 8 (JDK-jre) and uninstall JAVA 6.


------------------------------------------------------------------------------------------------------------------------------------------------
03.	R		: Add / update classes for domain and web

	S		: add
	D		: generated from Argo
				nl.zoethout.grot.domain.Adres.java
				nl.zoethout.grot.domain.Beheerder.java
				nl.zoethout.grot.domain.Evenement.java
				nl.zoethout.grot.domain.Gebruiker.java
				nl.zoethout.grot.domain.Groep.java
				nl.zoethout.grot.domain.Groepslid.java
				nl.zoethout.grot.domain.Organisatie.java
				nl.zoethout.grot.domain.Tent.java

	S		: re-factored
				nl.zoethout.grot.domain.Gebruiker -> User.java
				nl.zoethout.grot.domain.Organisatie -> Organization
				nl.zoethout.grot.domain.Groep -> Group
				nl.zoethout.grot.domain.Groepslid -> GroupMember
				nl.zoethout.grot.domain.Evenement -> Event
				nl.zoethout.grot.domain.Adres -> Address

	S		: add dependency
				<dependency>
					<groupId>javax</groupId>
					<artifactId>javaee-api</artifactId>
					<version>6.0</version>
					<scope>provided</scope>
				</dependency>
	* P03-01	: java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/servlet/ServletException
				The javax:javaee-api is intended for compiling, not running, including unit tests.
				If you need classes suitable for running against, run against a Java EE application server.
	S		: add dependency
				<!-- https://mvnrepository.com/artifact/javax.persistence/persistence-api -->
				<dependency>
					<groupId>javax.persistence</groupId>
					<artifactId>persistence-api</artifactId>
					<version>1.0.2</version>
				</dependency>
	D		: works fine for now, but unsure if this is the best solution
	*P03-01	: solved...!

	S		: add javax annotations
				nl.zoethout.grot.domain.User.tents

	S		: add constructors, getters and setters
				nl.zoethout.grot.domain.User
				nl.zoethout.grot.domain.Tent
				nl.zoethout.grot.domain.Organization
				nl.zoethout.grot.domain.Group
				nl.zoethout.grot.domain.GroupMember
				nl.zoethout.grot.domain.Event
				nl.zoethout.grot.domain.Administrator
				nl.zoethout.grot.domain.Address

	- more annotations to go in user -


------------------------------------------------------------------------------------------------------------------------------------------------
05.	R		: Create SQL-datamodel

	S		: add
				user, group, user_group, address and organization


------------------------------------------------------------------------------------------------------------------------------------------------
07.	R		: Create basic web-interface

	S		: add
				web-resources from another (working) project
	S		: re-write
				/grot/src/main/webapp/WEB-INF/jsp/welcome.jsp

	S		: add
				/grot/src/main/webapp/WEB-INF/jsp/header.jsp
				/grot/src/main/webapp/WEB-INF/jsp/footer.jsp
				/grot/src/main/webapp/WEB-INF/jsp/home.jsp

	S		: re-write
				nl.zoethout.grot.web.Welcome.welcome(Map<String, Object>)
					"welcome" -> "home"
	D		: effectively disabled "welcome.jsp"
	S		: re-write
				/grot/src/main/webapp/WEB-INF/jsp/home.jsp
	D		: saved old version as "home.txt"

	*P07-01	: custom text doesn't show
	S		: add
				/grot/src/main/resources/link.properties
				nl.zoethout.grot.web.Welcome.lnk
				nl.zoethout.grot.web.Welcome.setAttributes()
				nl.zoethout.grot.web.Welcome.setSiteLink(String)
				nl.zoethout.grot.web.Welcome.model
	S		: re-write
				nl.zoethout.grot.web.Welcome.welcome(Map<String, Object>)
	*P07-01	: solved...!

	P07-02	: taglib is not present, so custom tags are not functioning
	S		: add
				/grot/src/main/webapp/WEB-INF/taglib.tld
	S		: add dependency
				<!-- Datetime -->
				<dependency>
					<groupId>joda-time</groupId>
					<artifactId>joda-time</artifactId>
				</dependency>
	S		: add
				nl.zoethout.grot.util.DatetimeHelper
	S		: re-write
				/grot/src/main/webapp/WEB-INF/jsp/home.jsp


------------------------------------------------------------------------------------------------------------------------------------------------
09.	R		: Efficient Spring-configuration

	S		: add
				/grot/src/main/resources/spring/applicationContext.xml
	S		: re-write
				/grot/src/main/webapp/WEB-INF/mvc-dispatcher-servlet.xml
	D		: made it import "applicationContext.xml"


------------------------------------------------------------------------------------------------------------------------------------------------
08.	R		: Create login-page

	S		: add
				nl.zoethout.grot.web.Welcome.attributes
				nl.zoethout.grot.web.Welcome.lnk
				nl.zoethout.grot.web.Welcome.txt
				nl.zoethout.grot.web.Welcome.login(HttpServletRequest)
				nl.zoethout.grot.web.Welcome.setSiteText(String)
				nl.zoethout.grot.web.Welcome.setSiteLink(String)
				nl.zoethout.grot.web.Welcome.setAttributes()
				nl.zoethout.grot.web.Welcome.welcome(Map<String, Object>)
				/grot/src/main/webapp/WEB-INF/jsp/login.jsp
				/grot/src/main/resources/text.properties

	S		: re-write
				/grot/src/main/webapp/WEB-INF/jsp/home.jsp


------------------------------------------------------------------------------------------------------------------------------------------------
10.	R		: Security

	S		: add security
				/grot/src/main/resources/spring-security.xml

	D		: after several day of struggle and endless experimenting I failed and gave up...


------------------------------------------------------------------------------------------------------------------------------------------------
11.	R		: Data-connectivity

	S		: add
				/grot/src/main/resources/spring-mvc.xml
				/grot/db.sql
	S		: re-write
				/grot/pom.xml
				/grot/src/main/resources/applicationContext.xml
				/grot/src/main/resources/application.properties
	S		: delete
				/grot/src/main/resources/static/main.css
				/grot/src/main/webapp/WEB-INF/jsp/welcome.jsp
	S		: re-write
				/grot/src/main/webapp/WEB-INF/jsp/header.jsp
	D		: Changed path of stylesheets to absolute. Otherwise not loaded on sublinks like /foo/bar.

	S		: re-write
				nl.zoethout.grot.web.Welcome -> HomeController
				nl.zoethout.grot.domain.User -> UserPreferred
	S		: add entities
				nl.zoethout.grot.domain.Role
				nl.zoethout.grot.domain.User
				nl.zoethout.grot.domain.UserRole
	S		: add
				nl.zoethout.grot.repository.UserRepository
				nl.zoethout.grot.dao.UserDao
				nl.zoethout.grot.dao.UserDaoGrot
				nl.zoethout.grot.web.DemoController
				/grot/src/main/webapp/WEB-INF/jsp/demo.jsp
	S		: re-write
				nl.zoethout.grot.web.HomeController







				<!-- SQL -->
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
				</dependency>

				<!-- Hibernate -->
				<!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
				<dependency>
					<groupId>org.hibernate.validator</groupId>
					<artifactId>hibernate-validator</artifactId>
					<version>6.0.10.Final</version>
					<scope>compile</scope>
				</dependency>
				<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
				<dependency>
					<groupId>org.hibernate</groupId>
					<artifactId>hibernate-core</artifactId>
					<version>5.3.1.Final</version>
				</dependency>

	S		: add
				/grot/src/main/resources/META-INF/persistence.xml
	D		: persistence unit

	S		: add
				nl.zoethout.grot.domain.UserGroup

	S		: re-write
				nl.zoethout.grot.domain.User
				nl.zoethout.grot.domain.Group
	D		: saved old versions as .txt


	// http://www.tutorialspoint.com/spring/spring_jdbc_example.htm

	/**
	 * JTA-capable EntityManager is usually created by application server and
	 * obtained from it via JNDI.
	 */

------------------------------------------------------------------------------------------------------------------------------------------------
10.	R		: Basic SQL-model and security


